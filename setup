#!/bin/bash
#
# The following path detection code is copied from StackOverflow [1]. It is 
# licensed under GPL 2.0. 
#
# [1]: <http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in/179231#179231>. 


SCRIPT_PATH="${BASH_SOURCE[0]}"
if ([ -h "${SCRIPT_PATH}" ]) then
  while ([ -h "${SCRIPT_PATH}" ]) do 
      SCRIPT_PATH=`readlink "${SCRIPT_PATH}"`
  done
fi
pushd . > /dev/null
cd `dirname ${SCRIPT_PATH}` > /dev/null
SCRIPT_PATH=`pwd`;
popd  > /dev/null


#echo $SCRIPT_PATH


link() 
{
    if [ -h ~/.$1 ]; then
        # symlink already exists but different, backup
        if [ "$(readlink ~/.$1)" != "$SCRIPT_PATH/files/$1" ]; then
            mv ~/.$1 ~/.$1.old
        else
            return
        fi
    elif [ -e ~/$1 ]; then
        # file/dir already exists. backup it and symlink to the new one
        mv ~/.$1 ~/.$1.old
        ln -s $SCRIPT_PATH/files/$1  ~/.$1 
        echo ~/.$1 linked
    fi

    ln -s $SCRIPT_PATH/files/$1  ~/.$1 
    echo ~/.$1 installed.
}

for each in $SCRIPT_PATH/files/*; do
    if [ -e $each ]; then
        link `basename $each` 
    fi
done

echo Dotfiles linked
